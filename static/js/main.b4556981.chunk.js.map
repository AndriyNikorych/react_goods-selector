{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selectedGood","addGoods","goods","includes","setState","deleteGoods","aboutProducts","length","join","this","className","type","onClick","map","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAwFaC,E,4MAhFbC,MAAQ,CACNC,aAAc,CAAC,Q,EAGjBC,SAAW,SAACC,GACL,EAAKH,MAAMC,aAAaG,SAASD,IACpC,EAAKE,UAAU,SAAAL,GAAK,MAAK,CACvBC,aAAa,GAAD,mBAAMD,EAAMC,cAAZ,CAA0BE,S,EAK5CG,YAAc,WACZ,EAAKD,SAAS,CAAEJ,aAAc,M,EAGhCM,cAAgB,WACd,IAAQN,EAAiB,EAAKD,MAAtBC,aAER,OAA4B,IAAxBA,EAAaO,OACT,GAAN,OAAUP,EAAV,gBAGEA,EAAaO,OAAS,EAClB,GAAN,OAAUP,EAAaQ,KAAK,MAA5B,iBAGK,qB,4CAGT,WAAU,IAAD,OACCR,EAAiBS,KAAKV,MAAtBC,aAER,OACE,sBAAKU,UAAU,MAAf,UACE,qBAAIA,UAAU,iBAAd,2BAEG,IACAD,KAAKH,mBAGR,wBACEK,KAAK,SACLC,QAASH,KAAKJ,YACdK,UAAoC,IAAxBV,EAAaO,OACrB,iBACA,2CALN,eAUA,oBAAIG,UAAU,OAAd,SACGb,EAAgBgB,KAAI,SAAAX,GAAK,OACxB,qBAEEQ,UAAWV,EAAaG,SAASD,GAC7B,gCACA,aAJN,UAMGA,EAED,wBACES,KAAK,SACLD,UAAWV,EAAaG,SAASD,GAC7B,oCACA,eACJU,QAAS,WACP,EAAKX,SAASC,IANlB,sBAPKA,e,GAvDDY,IAAMC,WCjBxBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b4556981.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype Props = {\n  selectedGood: string[];\n};\n\nclass App extends React.Component<{}, Props> {\n  state = {\n    selectedGood: ['Jam'],\n  };\n\n  addGoods = (goods: string) => {\n    if (!this.state.selectedGood.includes(goods)) {\n      this.setState((state => ({\n        selectedGood: [...state.selectedGood, goods],\n      })));\n    }\n  };\n\n  deleteGoods = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  aboutProducts = () => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.length === 1) {\n      return `${selectedGood} is selected`;\n    }\n\n    if (selectedGood.length > 1) {\n      return `${selectedGood.join(', ')} are selected`;\n    }\n\n    return 'No goods selected';\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"list__selected\">\n          Selected good:\n          {' '}\n          {this.aboutProducts()}\n        </h1>\n\n        <button\n          type=\"button\"\n          onClick={this.deleteGoods}\n          className={(selectedGood.length !== 0)\n            ? 'list__button-X'\n            : 'list__button-X list__button-X--invisible'}\n        >\n          X\n        </button>\n        {/* {goodsFromServer.length} */}\n        <ul className=\"list\">\n          {goodsFromServer.map(goods => (\n            <li\n              key={goods}\n              className={selectedGood.includes(goods)\n                ? 'list__item list__item--active'\n                : 'list__item'}\n            >\n              {goods}\n\n              <button\n                type=\"button\"\n                className={selectedGood.includes(goods)\n                  ? 'list__button list__button--active'\n                  : 'list__button'}\n                onClick={() => {\n                  this.addGoods(goods);\n                }}\n              >\n                SELECT\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}